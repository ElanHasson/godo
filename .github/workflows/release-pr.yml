name: Release PR

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g. 1.8.0)"
        required: true

env:
  VERSION_PREFIX: release

jobs:
  release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Validate version is SemVer
        run: |
          version="${{ github.event.inputs.version }}"
          if [[ ! "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version: '$version'. Must match semantic versioning (e.g. 1.2.3)"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"


      - name: Create release branch
        run: |
          branch="${VERSION_PREFIX}/${{ github.event.inputs.version }}"
          git checkout -b "$branch"

      - name: Install github-changelog-generator@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/digitalocean/github-changelog-generator@latest
      
      - name: Update libraryVersion in godo.go
        run: |
          version="${{ github.event.inputs.version }}"
          sed -i -E "s/^(libraryVersion = \")[^\"]+(\")/\1${version}\2/" godo.go

      - name: Insert version section manually if missing and generate CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ github.event.inputs.version }}"
          date=$(date +%F)
          header="## [${version}] - ${date}"

          # Run generator
          github-changelog-generator -org ${{ github.repository_owner }} -repo ${{ github.event.repository.name }}

          # Check if it inserted the version header
          if grep -q "^## \[${version}\]" CHANGELOG.md; then
            echo "CHANGELOG already contains section for ${version}, skipping manual insert."
            exit 0
          fi

          if [ -z "$changelog" ]; then
            echo "No manual changelog entries provided. Aborting."
            exit 1
          fi

          new_section="${header}\n\n${changelog}\n"

          awk -v section="$new_section" '
            NR==1 { print; next }
            /^# Change Log/ && !inserted {
              print; print ""; print section; inserted=1; next
            }
            { print }
          ' CHANGELOG.md > NEW_CHANGELOG.md

          mv NEW_CHANGELOG.md CHANGELOG.md

      - name: Show changes before commit
        run: git diff

      - name: Commit changes (only if needed)
        run: |
          git add CHANGELOG.md godo.go
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 1
          fi
          git commit -m "Release ${{ github.event.inputs.version }}: update CHANGELOG and libraryVersion"

      - name: Push branch
        run: |
          branch="${VERSION_PREFIX}/${{ github.event.inputs.version }}"
          git push origin "$branch"

      - name: Create Pull Request with gh CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ github.event.inputs.version }}"
          branch="${VERSION_PREFIX}/${version}"

          changelog=$(github-changelog-generator -org ${{github.repository_owner}} -repo ${{github.event.repository.name}})
          changelog=$(echo "$changelog" | sed '/^\s*$/d')

          gh pr create \
            --base main \
            --head "$branch" \
            --title "Release ${version} (${{ github.sha }})" \
            --body "This PR updates the CHANGELOG and libraryVersion for \`${version}\`.\n\n### Changelog:\n${changelog}"
